name: release snapshot
description: create a snapshot release
inputs:
  tag:
    description: name of the tag to release
    required: true
  npm-token:
    description: token for pushing to npm
    required: true
  gh-token:
    description: github token
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: generate patch for all packages
      shell: bash
      run: sh ./.github/actions/changeset-snapshot/create-pre-release-changeset.sh ${{ inputs.tag }}

    - name: Generate status
      id: status
      shell: bash
      run: |
        pnpm changeset status --output changeset.json
        RELEASE_COUNT=$(cat changeset.json | jq '.releases | length')
        echo "releases=${RELEASE_COUNT}" >> "$GITHUB_OUTPUT"
      env:
        GITHUB_TOKEN: ${{ inputs.gh-token }}

    - name: Create Release Pull Request or Publish to npm
      shell: bash
      if: ${{ steps.status.outputs.releases > 0 }}
      run: |
        pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        pnpm changeset version --snapshot ${{ inputs.tag }}
        pnpm publish -r --tag ${{ inputs.tag }} --no-git-checks --report-summary
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
        GITHUB_TOKEN: ${{ inputs.gh-token }}

    - uses: actions/upload-artifact@v4
      if: ${{ steps.status.outputs.releases > 0 }}
      with:
        name: changeset-status
        path: changeset.json
